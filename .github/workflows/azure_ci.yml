name: Azure CI P7 Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        default: 'dev'
      model_path:
        description: 'Path to the MLflow model'
        required: true
        default: 'mlflow_model/'  # Default path

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user -r requirements.txt
        pip install azureml-sdk mlflow

    - name: Run tests
      run: |
        pytest pytest_tests.py --cov=pipeline --cov-report=xml

    # Log the model_path input
    - name: Log Model Path
      run: |
        echo "Model Path: ${{ github.event.inputs.model_path }}"

    # List the files in the model path directory to verify if the model is there
    - name: List files in model path
      run: |
        ls -R ${{ github.event.inputs.model_path }}

    - name: Authenticate with Azure
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        az account show  # Check authentication success

    - name: Install Azure ML CLI extension
      run: |
        # Remove the old extension if it exists
        # az extension remove --name azure-cli-ml
        
        # Install the latest Azure ML CLI extension
        az extension add --name ml

    - name: Update Azure CLI
      run: |
        az upgrade --yes

    - name: Deploy Model to Azure ML
      if: success()  # Execute only if tests succeed
      run: |
        # Ensure the correct extension is installed
        az extension add --name ml

        # Register the MLflow model in Azure ML (updated command)
        az ml model create --name P7-mlflow-model \
            --path ${{ github.event.inputs.model_path }}/model.pkl \
            --workspace-name P7_Scoring \
            --resource-group Maud

        # Create an online endpoint for deploying the model
        az ml online-endpoint create --name mlflow-endpoint \
            --workspace-name P7_Scoring \
            --resource-group Maud \
            --auth-mode key

        # Deploy the model to the online endpoint
        az ml online-endpoint deployment create --name mlflow-deployment \
            --endpoint-name mlflow-endpoint \
            --model P7-mlflow-model:1 \
            --workspace-name P7_Scoring \
            --resource-group Maud \
            --cpu 1 --memory 2.0

        # Check the status of the deployed service
        az ml online-endpoint show --name mlflow-endpoint --workspace-name P7_Scoring --resource-group Maud

